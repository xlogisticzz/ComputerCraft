-- Intilaizing Varables
local tArgs = {...}
local branchDist = tonumber(tArgs[1])
local branchNum = tonumber(tArgs[2])
branchNum = branchNum / 2
local moveDist = 0

--Functions
function refuel(slot , amount)
  local slot1 = tonumber(slot)
  local amount1 = tonumber(amount)
  if slot <= 16 then		
    if turtle.getFuelLevel() < 20 then
	  print("My current fuel level is: " .. turtle.getFuelLevel())
      if turtle.getItemCount(slot1) < amount then
        print("Im out of fuel")
      else
      turtle.select(slot1)
      turtle.refuel(amount1)
      turtle.select(1)
	  print("My New Fuel is: " .. turtle.getFuelLevel())
      end
    end
  else 
    error("Slot size is too big[Refuel]")
  end
end
function digForward()
    while turtle.detect() == true do
	  turtle.dig()
	end
	while turtle.forward() ~= true do
	  turtle.dig()
	end
	while turtle.detectUp() == true do
      turtle.digUp()
    end
    while turtle.detectDown() == true do
      turtle.digDown()
	end
	while turtle.detectUp() == true do
      turtle.digUp()
    end
  end 
function placeChest(slot, startSlot)
  local slot1 = tonumber(slot)
  local slot2 = tonumber(startSlot)
  turtle.select(slot)
  turtle.placeUp()
  turtle.select(1)
  dropOffUp(slot2)
  moveDist = 0
end
function dropOffUp(startSlot)
  local slot1 = tonumber(startSlot)
  for q = slot1, 16 do
    turtle.select(q)
	while turtle.getItemCount(q) ~= 0  do
		turtle.dropUp()
		os.sleep(.05)
	end
  end
  turtle.select(1)
end
function torch(slot , direction)
  local slot1 = tonumber(slot)
  local direction1 = tonumber(direction)
  if turtle.getItemCount(slot1) == 0 then
    print("Im out of torches")
  else   
    turtle.select(slot1)
	if direction == 1 then
		turtle.placeUp()
    elseif direction == 2 then
		turtle.placeDown()
	else
		error("Invalid direction [torch]")
	end
    turtle.select(1)
  end
end
function changeDirRight(dist)
  local dist1 = tonumber(dist)
  turtle.turnRight()
  for i = 1 , dist1 do
	digForward()
  end
  turtle.turnRight()
end
function changeDirLeft(dist)
  local dist1 = tonumber(dist)
  turtle.turnLeft()
  for i = 1 , dist1 do
    digForward()
  end
  turtle.turnLeft()
end
-- Main Code
if #tArgs ~= 3 then
	error("Incorrect Usage Incorrect Amount of Arguments")
else
	for i = 1 , branchNum do
		for  j = 1 , branchDist do
			refuel(1,10) 
			digForward()
			moveDist = moveDist + 1
			if moveDist == 70 then
				placeChest(3, 4)
			end
			if branchDist >= 10 then
				if (j % 10 == 0) then
					torch(2,2)
				end
			end
		end
		if tArgs[3] == "right" then
			changeDirRight(3)
		else
			changeDirLeft(3)
		end
		
		for k = 1 , branchDist do
			refuel(1,10) 
			digForward()
			moveDist = moveDist + 1
			if moveDist == 70 then
				placeChest(3, 4)
			end
			if branchDist >= 10 then
				if (k % 10 == 0) then
					torch(2,2)
				end
			end
		end
		if tArgs[3] == "right" then
			changeDirLeft(3)
		else
			changeDirRight(3)
		end
	end 
end